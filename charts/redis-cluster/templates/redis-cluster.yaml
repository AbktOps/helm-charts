---
apiVersion: redis.redis.opstreelabs.in/v1beta1
kind: RedisCluster
metadata:
  name: {{ .Release.Name }}
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: middleware
spec:
  clusterSize: {{ .Values.redisCluster.clusterSize }}
  redisLeader:
    serviceType: "{{ .Values.redisCluster.leaderServiceType }}"
  redisFollower:
    serviceType: "{{ .Values.redisCluster.followerServiceType }}"
  redisExporter:
    enabled: {{ .Values.redisExporter.enabled }}
    image: "{{ .Values.redisExporter.image }}:{{ .Values.redisExporter.tag }}"
    imagePullPolicy: "{{ .Values.redisExporter.imagePullPolicy }}"
    resources:
{{ toYaml .Values.redisExporter.resources | indent 6 }}
  kubernetesConfig:
    image: "{{ .Values.redisCluster.image }}:{{ .Values.redisCluster.tag }}"
    imagePullPolicy: "{{ .Values.redisCluster.imagePullPolicy }}"
    resources:
{{ toYaml .Values.redisCluster.resources | indent 6 }}
{{- if .Values.redisCluster.redisSecret }}
    redisSecret:
      name: "{{ .Values.redisCluster.redisSecret.secretName }}"
      key: "{{ .Values.redisCluster.redisSecret.secretKey }}"
{{- end }}
    serviceType: ClusterIP
{{- if .Values.storageSpec }}
  storage:
{{ toYaml .Values.storageSpec | indent 4 }}
{{- end }}
{{- if .Values.priorityClassName }}
  priorityClassName: "{{ .Values.priorityClassName }}"
{{- end }}
{{- if .Values.nodeSelector }}
  nodeSelector:
{{ toYaml .Values.nodeSelector | indent 4 }}
{{- end }}
{{- if .Values.affinity }}
  affinity:
{{ toYaml .Values.affinity | indent 4 }}
{{- end }}
{{- if .Values.securityContext }}
  securityContext:
{{ toYaml .Values.securityContext | indent 4 }}
{{- end }}
{{- if .Values.tolerations }}
  tolerations:
{{ toYaml .Values.tolerations | indent 4 }}
{{- end }}
